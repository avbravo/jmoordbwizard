implementar paginacion

https://github.com/RicardoToledoB/jsf-paginacion/blob/master/src/main/java/com/ricardo/proyecto/dao/UsuarioDAOImpl.java
public List<Usuario> paginate(int min , int max){
        List list=em.createQuery("select u from Usuario u")
                .setFirstResult(min)
                .setMaxResults(max)
                .getResultList();
        return list;
    }

public int cantRows(){
        String sql = "SELECT COUNT(u) FROM Usuario u";
        Query query = em.createQuery(sql);
        int size=(int) query.getSingleResult();
        return size;
    }
    
    public int cantPages(){
        return this.cantRows()/5;
    }


COLAPSAR CODIGO EN EL IDE
 // <editor-fold defaultstate="collapsed" desc="Generated Code">   
      public static String generateUniqueID() {
        String strValue = "";
        UUID idUnique = UUID.randomUUID();
        strValue = idUnique.toString();
        return strValue.toUpperCase();
    }// </editor-fold>   



=======================
compilar reporte
  JasperReport jasperReport =
                JasperCompileManager.compileReport(reportSource);


==================================
IMPRIMIR FACTURAS RELACIONADOS
==============================
 public String printSubreport() {
        try {

            List<Facturas> facturasList = new ArrayList<Facturas>();

            Facturas f1 = new Facturas();
            f1.setCliente("Juana");
            f1.setIdfactura("1");
            List<Detalles> detallesList = new ArrayList<>();
            Detalles d1 = new Detalles("p1", "Uno");
            detallesList.add(d1);
            Detalles d2 = new Detalles("p2", "Dos");
            detallesList.add(d2);
            f1.setDetalles(detallesList);
            facturasList.add(f1);

            //
            f1 = new Facturas();
            f1.setCliente("Maria");
            f1.setIdfactura("2");
            detallesList = new ArrayList<>();
            d1 = new Detalles("p3", "Tres");
            detallesList.add(d1);

            f1.setDetalles(detallesList);
            facturasList.add(f1);

            String ruta = "/resources/reportes/subreportes/facturas.jasper";
            HashMap parameters = new HashMap();

            String reportsDirPath = FacesContext.getCurrentInstance().getExternalContext().getRealPath("/resources/reportes/subreportes/");
            parameters.put("SUBREPORT_DIR", reportsDirPath + "/");


            printer.imprimir(facturasList, ruta, parameters);
        } catch (Exception ex) {
            JsfUtil.addErrorMessage("imprimir() " + ex.getLocalizedMessage());
        }
        return null;
    


  <p:outputLabel value="#{msg.activo}" for="activo" />
      <javscaz:activo disabled="#{actividadesController.desactivar}" id="activo"  beanValue="#{actividadesController.actividades.activo}"/>


utp/webseguridad/ejbseguridad

utp/webseguridad/ejbseguridad